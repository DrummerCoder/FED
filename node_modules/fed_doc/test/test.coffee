### 
#	Test fed_doc
#	@author: ijse
###

should = require("chai").should()
fedDoc = require "../index.coffee"

tpath = "#{__dirname}/res"
describe "FED_DOC", ->
	it "获取处理文件列表", (done)->
		files = [
			tpath + "/a.js",
			tpath + "/b.js",
			tpath + "/fo/c.js"
		]

		# listFiles()
		list = fedDoc.listFiles tpath

		files.length.should.equal list.length
		list.should.include files[0]
		list.should.include files[1]
		list.should.include files[2]
		done()

	it "提取出正确的注释内容", ->
		# grepComment()
		tfile = "#{tpath}/a.js"
		dComment = "
		/***
		 * Test title
		 */"
		result = fedDoc.grepComment tfile
		result.should.equal dComment
	
	describe "测试注释解析器", ->
		it "#title 方法名", ->
			r - fedDoc.parser.title()
			r.should.to.be.a "string"
			r.should.to.equal "User login method"

		it "#desc 方法描述", ->
			r = fedDoc.parser.desc()
			r.should.to.be.a "string"
			r.should.to.equal "Some description"

		it "#params 请求参数", ->
			params = fedDoc.parser.params()
			params.length.should.equal 2
			params.should.to.be.a "array" 
			params.should.include { arg: "name", desc: "user name" } 
			params.should.include { arg: "pass", desc: "password" } 

		it "#author 方法作者", ->
			r = fedDoc.parser.author()
			r.should.to.be.a "string"
			r.should.to.equal "ijse"

		it "#return 请求返回值", ->
			r = fedDoc.parser.return()
			r.should.to.be.a "string"
			r.should.to.equal "success|fail"




