{
  "name": "nodejs-proxy",
  "version": "1.0.0",
  "description": "Simple HTTP proxy for node.js",
  "main": "proxy.js",
  "bin": {
    "proxy": "proxy.js"
  },
  "keywords": [
    "proxy",
    "http"
  ],
  "author": {
    "name": "Peteris Krumins",
    "email": "peteris.krumins@gmail.com",
    "url": "http://www.catonmat.net"
  },
  "license": {
    "type": "MIT"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:pkrumins/nodejs-proxy.git"
  },
  "engines": {
    "node": ">=0.2.0"
  },
  "readme": "Nodejs-proxy is a simple HTTP reverse proxy server written in node.js. It currently\nallows some mid-complexity to handle the reverse proxy magic take place.\n\nNodejs-proxy was written by Peteris Krumins (peter@catonmat.net).\nHis blog is at http://www.catonmat.net  --  good coders code, great reuse.\n\n------------------------------------------------------------------------------\n\nYou'll need node.js to run it. Get it at www.nodejs.org, then compile and\ninstall it:\n\n    $ ./configure\n    $ make\n    $ make install\n\nNext, run proxy.js through node program:\n\n    $ node proxy.js\n\nAnd that's it!\n\nI have also added ip-based access control. As long as no ip is explicitly denied,\nall will be allowed. If you need a specic access list just echo it to\n'allow_ip_list' file:\n\n    $ echo '1.2.3.4' >> config/allow_ip_list\n\nAnd you don't need to restart the server, it will see the changes and update\nitself.\n\nYou can also block hosts based on a regex pattern, to do that, echo the hosts\nyou don't wish the proxy to serve to 'black_list' file:\n\n    $ echo 'facebook.com' >> config/black_list\n\n\nMore features coming later!\n\n\n------------------------------------------------------------------------------\n\nHappy proxying!\n\nSincerely,\nPeteris Krumins\nhttp://www.catonmat.net\n\n",
  "readmeFilename": "readme.txt",
  "_id": "nodejs-proxy@1.0.0",
  "dist": {
    "shasum": "5d4b69b6c2eb09f36110e5bc522ab7c7fa37884b"
  },
  "_from": "nodejs-proxy"
}
